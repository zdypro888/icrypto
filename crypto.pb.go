// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: crypto.proto

package icrypto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InitializeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DevicePlist []byte `protobuf:"bytes,1,opt,name=DevicePlist,proto3" json:"DevicePlist,omitempty"`
	Hardware    int32  `protobuf:"varint,2,opt,name=Hardware,proto3" json:"Hardware,omitempty"`
}

func (x *InitializeRequest) Reset() {
	*x = InitializeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest) ProtoMessage() {}

func (x *InitializeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest.ProtoReflect.Descriptor instead.
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{0}
}

func (x *InitializeRequest) GetDevicePlist() []byte {
	if x != nil {
		return x.DevicePlist
	}
	return nil
}

func (x *InitializeRequest) GetHardware() int32 {
	if x != nil {
		return x.Hardware
	}
	return 0
}

type InitializeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitializeResponse) Reset() {
	*x = InitializeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeResponse) ProtoMessage() {}

func (x *InitializeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeResponse.ProtoReflect.Descriptor instead.
func (*InitializeResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{1}
}

type FinalizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FinalizeRequest) Reset() {
	*x = FinalizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeRequest) ProtoMessage() {}

func (x *FinalizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeRequest.ProtoReflect.Descriptor instead.
func (*FinalizeRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{2}
}

type FinalizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FinalizeResponse) Reset() {
	*x = FinalizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeResponse) ProtoMessage() {}

func (x *FinalizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeResponse.ProtoReflect.Descriptor instead.
func (*FinalizeResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{3}
}

type ActivationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sha1Data []byte `protobuf:"bytes,1,opt,name=Sha1Data,proto3" json:"Sha1Data,omitempty"`
}

func (x *ActivationRequest) Reset() {
	*x = ActivationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationRequest) ProtoMessage() {}

func (x *ActivationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationRequest.ProtoReflect.Descriptor instead.
func (*ActivationRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{4}
}

func (x *ActivationRequest) GetSha1Data() []byte {
	if x != nil {
		return x.Sha1Data
	}
	return nil
}

type ActivationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign []byte `protobuf:"bytes,1,opt,name=Sign,proto3" json:"Sign,omitempty"`
	Cert []byte `protobuf:"bytes,2,opt,name=Cert,proto3" json:"Cert,omitempty"`
}

func (x *ActivationResponse) Reset() {
	*x = ActivationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationResponse) ProtoMessage() {}

func (x *ActivationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationResponse.ProtoReflect.Descriptor instead.
func (*ActivationResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{5}
}

func (x *ActivationResponse) GetSign() []byte {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *ActivationResponse) GetCert() []byte {
	if x != nil {
		return x.Cert
	}
	return nil
}

type ActivationKeyDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyData []byte `protobuf:"bytes,1,opt,name=KeyData,proto3" json:"KeyData,omitempty"`
}

func (x *ActivationKeyDataRequest) Reset() {
	*x = ActivationKeyDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivationKeyDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationKeyDataRequest) ProtoMessage() {}

func (x *ActivationKeyDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationKeyDataRequest.ProtoReflect.Descriptor instead.
func (*ActivationKeyDataRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{6}
}

func (x *ActivationKeyDataRequest) GetKeyData() []byte {
	if x != nil {
		return x.KeyData
	}
	return nil
}

type ActivationKeyDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActivationKeyDataResponse) Reset() {
	*x = ActivationKeyDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivationKeyDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationKeyDataResponse) ProtoMessage() {}

func (x *ActivationKeyDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationKeyDataResponse.ProtoReflect.Descriptor instead.
func (*ActivationKeyDataResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{7}
}

type ActivationDRMHandshakeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActivationDRMHandshakeRequest) Reset() {
	*x = ActivationDRMHandshakeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivationDRMHandshakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationDRMHandshakeRequest) ProtoMessage() {}

func (x *ActivationDRMHandshakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationDRMHandshakeRequest.ProtoReflect.Descriptor instead.
func (*ActivationDRMHandshakeRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{8}
}

type ActivationDRMHandshakeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session                 uint64 `protobuf:"varint,1,opt,name=Session,proto3" json:"Session,omitempty"`
	HandshakeRequestMessage []byte `protobuf:"bytes,2,opt,name=HandshakeRequestMessage,proto3" json:"HandshakeRequestMessage,omitempty"`
}

func (x *ActivationDRMHandshakeResponse) Reset() {
	*x = ActivationDRMHandshakeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivationDRMHandshakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationDRMHandshakeResponse) ProtoMessage() {}

func (x *ActivationDRMHandshakeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationDRMHandshakeResponse.ProtoReflect.Descriptor instead.
func (*ActivationDRMHandshakeResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{9}
}

func (x *ActivationDRMHandshakeResponse) GetSession() uint64 {
	if x != nil {
		return x.Session
	}
	return 0
}

func (x *ActivationDRMHandshakeResponse) GetHandshakeRequestMessage() []byte {
	if x != nil {
		return x.HandshakeRequestMessage
	}
	return nil
}

type ActivationDRMHandshakeInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session                  uint64 `protobuf:"varint,1,opt,name=Session,proto3" json:"Session,omitempty"`
	FDRBlob                  []byte `protobuf:"bytes,2,opt,name=FDRBlob,proto3" json:"FDRBlob,omitempty"`
	SUInfo                   []byte `protobuf:"bytes,3,opt,name=SUInfo,proto3" json:"SUInfo,omitempty"`
	HandshakeResponseMessage []byte `protobuf:"bytes,4,opt,name=HandshakeResponseMessage,proto3" json:"HandshakeResponseMessage,omitempty"`
	ServerKP                 []byte `protobuf:"bytes,5,opt,name=ServerKP,proto3" json:"ServerKP,omitempty"`
	ActivationInfoXML        []byte `protobuf:"bytes,6,opt,name=ActivationInfoXML,proto3" json:"ActivationInfoXML,omitempty"`
}

func (x *ActivationDRMHandshakeInfoRequest) Reset() {
	*x = ActivationDRMHandshakeInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivationDRMHandshakeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationDRMHandshakeInfoRequest) ProtoMessage() {}

func (x *ActivationDRMHandshakeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationDRMHandshakeInfoRequest.ProtoReflect.Descriptor instead.
func (*ActivationDRMHandshakeInfoRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{10}
}

func (x *ActivationDRMHandshakeInfoRequest) GetSession() uint64 {
	if x != nil {
		return x.Session
	}
	return 0
}

func (x *ActivationDRMHandshakeInfoRequest) GetFDRBlob() []byte {
	if x != nil {
		return x.FDRBlob
	}
	return nil
}

func (x *ActivationDRMHandshakeInfoRequest) GetSUInfo() []byte {
	if x != nil {
		return x.SUInfo
	}
	return nil
}

func (x *ActivationDRMHandshakeInfoRequest) GetHandshakeResponseMessage() []byte {
	if x != nil {
		return x.HandshakeResponseMessage
	}
	return nil
}

func (x *ActivationDRMHandshakeInfoRequest) GetServerKP() []byte {
	if x != nil {
		return x.ServerKP
	}
	return nil
}

func (x *ActivationDRMHandshakeInfoRequest) GetActivationInfoXML() []byte {
	if x != nil {
		return x.ActivationInfoXML
	}
	return nil
}

type ActivationDRMHandshakeInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignActRequest []byte `protobuf:"bytes,1,opt,name=SignActRequest,proto3" json:"SignActRequest,omitempty"`
	ServerKP       []byte `protobuf:"bytes,2,opt,name=ServerKP,proto3" json:"ServerKP,omitempty"`
}

func (x *ActivationDRMHandshakeInfoResponse) Reset() {
	*x = ActivationDRMHandshakeInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivationDRMHandshakeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationDRMHandshakeInfoResponse) ProtoMessage() {}

func (x *ActivationDRMHandshakeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationDRMHandshakeInfoResponse.ProtoReflect.Descriptor instead.
func (*ActivationDRMHandshakeInfoResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{11}
}

func (x *ActivationDRMHandshakeInfoResponse) GetSignActRequest() []byte {
	if x != nil {
		return x.SignActRequest
	}
	return nil
}

func (x *ActivationDRMHandshakeInfoResponse) GetServerKP() []byte {
	if x != nil {
		return x.ServerKP
	}
	return nil
}

type ADIStartProvisioningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DSID int64  `protobuf:"varint,1,opt,name=DSID,proto3" json:"DSID,omitempty"`
	SPIM []byte `protobuf:"bytes,2,opt,name=SPIM,proto3" json:"SPIM,omitempty"`
}

func (x *ADIStartProvisioningRequest) Reset() {
	*x = ADIStartProvisioningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ADIStartProvisioningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ADIStartProvisioningRequest) ProtoMessage() {}

func (x *ADIStartProvisioningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ADIStartProvisioningRequest.ProtoReflect.Descriptor instead.
func (*ADIStartProvisioningRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{12}
}

func (x *ADIStartProvisioningRequest) GetDSID() int64 {
	if x != nil {
		return x.DSID
	}
	return 0
}

func (x *ADIStartProvisioningRequest) GetSPIM() []byte {
	if x != nil {
		return x.SPIM
	}
	return nil
}

type ADIStartProvisioningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session uint64 `protobuf:"varint,1,opt,name=Session,proto3" json:"Session,omitempty"`
	CPIM    []byte `protobuf:"bytes,2,opt,name=CPIM,proto3" json:"CPIM,omitempty"`
}

func (x *ADIStartProvisioningResponse) Reset() {
	*x = ADIStartProvisioningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ADIStartProvisioningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ADIStartProvisioningResponse) ProtoMessage() {}

func (x *ADIStartProvisioningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ADIStartProvisioningResponse.ProtoReflect.Descriptor instead.
func (*ADIStartProvisioningResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{13}
}

func (x *ADIStartProvisioningResponse) GetSession() uint64 {
	if x != nil {
		return x.Session
	}
	return 0
}

func (x *ADIStartProvisioningResponse) GetCPIM() []byte {
	if x != nil {
		return x.CPIM
	}
	return nil
}

type ADIEndProvisioningRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session uint64 `protobuf:"varint,1,opt,name=Session,proto3" json:"Session,omitempty"`
	DSID    int64  `protobuf:"varint,2,opt,name=DSID,proto3" json:"DSID,omitempty"`
	RINFO   int64  `protobuf:"varint,3,opt,name=RINFO,proto3" json:"RINFO,omitempty"`
	PTM     []byte `protobuf:"bytes,4,opt,name=PTM,proto3" json:"PTM,omitempty"`
	TK      []byte `protobuf:"bytes,5,opt,name=TK,proto3" json:"TK,omitempty"`
	ADI     []byte `protobuf:"bytes,10,opt,name=ADI,proto3" json:"ADI,omitempty"`
}

func (x *ADIEndProvisioningRequest) Reset() {
	*x = ADIEndProvisioningRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ADIEndProvisioningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ADIEndProvisioningRequest) ProtoMessage() {}

func (x *ADIEndProvisioningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ADIEndProvisioningRequest.ProtoReflect.Descriptor instead.
func (*ADIEndProvisioningRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{14}
}

func (x *ADIEndProvisioningRequest) GetSession() uint64 {
	if x != nil {
		return x.Session
	}
	return 0
}

func (x *ADIEndProvisioningRequest) GetDSID() int64 {
	if x != nil {
		return x.DSID
	}
	return 0
}

func (x *ADIEndProvisioningRequest) GetRINFO() int64 {
	if x != nil {
		return x.RINFO
	}
	return 0
}

func (x *ADIEndProvisioningRequest) GetPTM() []byte {
	if x != nil {
		return x.PTM
	}
	return nil
}

func (x *ADIEndProvisioningRequest) GetTK() []byte {
	if x != nil {
		return x.TK
	}
	return nil
}

func (x *ADIEndProvisioningRequest) GetADI() []byte {
	if x != nil {
		return x.ADI
	}
	return nil
}

type ADIEndProvisioningResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MID []byte `protobuf:"bytes,1,opt,name=MID,proto3" json:"MID,omitempty"`
	OTP []byte `protobuf:"bytes,2,opt,name=OTP,proto3" json:"OTP,omitempty"`
	ADI []byte `protobuf:"bytes,10,opt,name=ADI,proto3" json:"ADI,omitempty"`
}

func (x *ADIEndProvisioningResponse) Reset() {
	*x = ADIEndProvisioningResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ADIEndProvisioningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ADIEndProvisioningResponse) ProtoMessage() {}

func (x *ADIEndProvisioningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ADIEndProvisioningResponse.ProtoReflect.Descriptor instead.
func (*ADIEndProvisioningResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{15}
}

func (x *ADIEndProvisioningResponse) GetMID() []byte {
	if x != nil {
		return x.MID
	}
	return nil
}

func (x *ADIEndProvisioningResponse) GetOTP() []byte {
	if x != nil {
		return x.OTP
	}
	return nil
}

func (x *ADIEndProvisioningResponse) GetADI() []byte {
	if x != nil {
		return x.ADI
	}
	return nil
}

type AbsintheHelloRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode int32 `protobuf:"varint,1,opt,name=Mode,proto3" json:"Mode,omitempty"`
}

func (x *AbsintheHelloRequest) Reset() {
	*x = AbsintheHelloRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbsintheHelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheHelloRequest) ProtoMessage() {}

func (x *AbsintheHelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheHelloRequest.ProtoReflect.Descriptor instead.
func (*AbsintheHelloRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{16}
}

func (x *AbsintheHelloRequest) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type AbsintheHelloResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelloMessage []byte `protobuf:"bytes,1,opt,name=HelloMessage,proto3" json:"HelloMessage,omitempty"`
}

func (x *AbsintheHelloResponse) Reset() {
	*x = AbsintheHelloResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbsintheHelloResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheHelloResponse) ProtoMessage() {}

func (x *AbsintheHelloResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheHelloResponse.ProtoReflect.Descriptor instead.
func (*AbsintheHelloResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{17}
}

func (x *AbsintheHelloResponse) GetHelloMessage() []byte {
	if x != nil {
		return x.HelloMessage
	}
	return nil
}

type AbsintheAddOptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BIKKey               []byte `protobuf:"bytes,1,opt,name=BIKKey,proto3" json:"BIKKey,omitempty"`
	BAACert              []byte `protobuf:"bytes,2,opt,name=BAACert,proto3" json:"BAACert,omitempty"`
	IntermediateRootCert []byte `protobuf:"bytes,3,opt,name=IntermediateRootCert,proto3" json:"IntermediateRootCert,omitempty"`
}

func (x *AbsintheAddOptionRequest) Reset() {
	*x = AbsintheAddOptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbsintheAddOptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheAddOptionRequest) ProtoMessage() {}

func (x *AbsintheAddOptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheAddOptionRequest.ProtoReflect.Descriptor instead.
func (*AbsintheAddOptionRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{18}
}

func (x *AbsintheAddOptionRequest) GetBIKKey() []byte {
	if x != nil {
		return x.BIKKey
	}
	return nil
}

func (x *AbsintheAddOptionRequest) GetBAACert() []byte {
	if x != nil {
		return x.BAACert
	}
	return nil
}

func (x *AbsintheAddOptionRequest) GetIntermediateRootCert() []byte {
	if x != nil {
		return x.IntermediateRootCert
	}
	return nil
}

type AbsintheAddOptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AbsintheAddOptionResponse) Reset() {
	*x = AbsintheAddOptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbsintheAddOptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheAddOptionResponse) ProtoMessage() {}

func (x *AbsintheAddOptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheAddOptionResponse.ProtoReflect.Descriptor instead.
func (*AbsintheAddOptionResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{19}
}

type AbsintheAtivateSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidationData []byte `protobuf:"bytes,1,opt,name=ValidationData,proto3" json:"ValidationData,omitempty"`
	ServerKey      []byte `protobuf:"bytes,2,opt,name=ServerKey,proto3" json:"ServerKey,omitempty"`
}

func (x *AbsintheAtivateSessionRequest) Reset() {
	*x = AbsintheAtivateSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbsintheAtivateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheAtivateSessionRequest) ProtoMessage() {}

func (x *AbsintheAtivateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheAtivateSessionRequest.ProtoReflect.Descriptor instead.
func (*AbsintheAtivateSessionRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{20}
}

func (x *AbsintheAtivateSessionRequest) GetValidationData() []byte {
	if x != nil {
		return x.ValidationData
	}
	return nil
}

func (x *AbsintheAtivateSessionRequest) GetServerKey() []byte {
	if x != nil {
		return x.ServerKey
	}
	return nil
}

type AbsintheAtivateSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AbsintheAtivateSessionResponse) Reset() {
	*x = AbsintheAtivateSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbsintheAtivateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheAtivateSessionResponse) ProtoMessage() {}

func (x *AbsintheAtivateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheAtivateSessionResponse.ProtoReflect.Descriptor instead.
func (*AbsintheAtivateSessionResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{21}
}

type AbsintheSignDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignData []byte `protobuf:"bytes,1,opt,name=SignData,proto3" json:"SignData,omitempty"`
}

func (x *AbsintheSignDataRequest) Reset() {
	*x = AbsintheSignDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbsintheSignDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheSignDataRequest) ProtoMessage() {}

func (x *AbsintheSignDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheSignDataRequest.ProtoReflect.Descriptor instead.
func (*AbsintheSignDataRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{22}
}

func (x *AbsintheSignDataRequest) GetSignData() []byte {
	if x != nil {
		return x.SignData
	}
	return nil
}

type AbsintheSignDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature  []byte `protobuf:"bytes,1,opt,name=Signature,proto3" json:"Signature,omitempty"`
	OutServKey []byte `protobuf:"bytes,2,opt,name=OutServKey,proto3" json:"OutServKey,omitempty"`
}

func (x *AbsintheSignDataResponse) Reset() {
	*x = AbsintheSignDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbsintheSignDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheSignDataResponse) ProtoMessage() {}

func (x *AbsintheSignDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheSignDataResponse.ProtoReflect.Descriptor instead.
func (*AbsintheSignDataResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{23}
}

func (x *AbsintheSignDataResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *AbsintheSignDataResponse) GetOutServKey() []byte {
	if x != nil {
		return x.OutServKey
	}
	return nil
}

type IndentitySessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cert []byte `protobuf:"bytes,1,opt,name=Cert,proto3" json:"Cert,omitempty"`
}

func (x *IndentitySessionRequest) Reset() {
	*x = IndentitySessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndentitySessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndentitySessionRequest) ProtoMessage() {}

func (x *IndentitySessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndentitySessionRequest.ProtoReflect.Descriptor instead.
func (*IndentitySessionRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{24}
}

func (x *IndentitySessionRequest) GetCert() []byte {
	if x != nil {
		return x.Cert
	}
	return nil
}

type IndentitySessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request []byte `protobuf:"bytes,1,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *IndentitySessionResponse) Reset() {
	*x = IndentitySessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndentitySessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndentitySessionResponse) ProtoMessage() {}

func (x *IndentitySessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndentitySessionResponse.ProtoReflect.Descriptor instead.
func (*IndentitySessionResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{25}
}

func (x *IndentitySessionResponse) GetRequest() []byte {
	if x != nil {
		return x.Request
	}
	return nil
}

type IndentityValidationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response []byte `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	SignData []byte `protobuf:"bytes,2,opt,name=SignData,proto3" json:"SignData,omitempty"`
}

func (x *IndentityValidationRequest) Reset() {
	*x = IndentityValidationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndentityValidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndentityValidationRequest) ProtoMessage() {}

func (x *IndentityValidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndentityValidationRequest.ProtoReflect.Descriptor instead.
func (*IndentityValidationRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{26}
}

func (x *IndentityValidationRequest) GetResponse() []byte {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *IndentityValidationRequest) GetSignData() []byte {
	if x != nil {
		return x.SignData
	}
	return nil
}

type IndentityValidationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VlidationData []byte `protobuf:"bytes,1,opt,name=VlidationData,proto3" json:"VlidationData,omitempty"`
}

func (x *IndentityValidationResponse) Reset() {
	*x = IndentityValidationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_crypto_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndentityValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndentityValidationResponse) ProtoMessage() {}

func (x *IndentityValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndentityValidationResponse.ProtoReflect.Descriptor instead.
func (*IndentityValidationResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{27}
}

func (x *IndentityValidationResponse) GetVlidationData() []byte {
	if x != nil {
		return x.VlidationData
	}
	return nil
}

var File_crypto_proto protoreflect.FileDescriptor

var file_crypto_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x11, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x11, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x53, 0x68, 0x61, 0x31, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x53, 0x68, 0x61, 0x31, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3c, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x53, 0x69,
	0x67, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x43, 0x65, 0x72, 0x74, 0x22, 0x34, 0x0a, 0x18, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x1b, 0x0a, 0x19,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x52, 0x4d, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68,
	0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x74, 0x0a, 0x1e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x52, 0x4d, 0x48, 0x61, 0x6e, 0x64, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68,
	0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x17, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xf5, 0x01, 0x0a, 0x21, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x52, 0x4d, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x46, 0x44, 0x52, 0x42, 0x6c, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x46, 0x44, 0x52, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x55,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x53, 0x55, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x18, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x18, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x50, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x50, 0x12, 0x2c, 0x0a, 0x11, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x58, 0x4d, 0x4c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x58, 0x4d, 0x4c, 0x22, 0x68, 0x0a, 0x22, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x52, 0x4d, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x41, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4b, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4b, 0x50, 0x22, 0x45, 0x0a, 0x1b, 0x41, 0x44, 0x49, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x53, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x44, 0x53, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x50, 0x49, 0x4d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x53, 0x50, 0x49, 0x4d, 0x22, 0x4c, 0x0a, 0x1c, 0x41, 0x44, 0x49,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x50, 0x49, 0x4d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x43, 0x50, 0x49, 0x4d, 0x22, 0x93, 0x01, 0x0a, 0x19, 0x41, 0x44, 0x49, 0x45,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x53, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44,
	0x53, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x49, 0x4e, 0x46, 0x4f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x52, 0x49, 0x4e, 0x46, 0x4f, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x54, 0x4d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x50, 0x54, 0x4d, 0x12, 0x0e, 0x0a, 0x02, 0x54,
	0x4b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x54, 0x4b, 0x12, 0x10, 0x0a, 0x03, 0x41,
	0x44, 0x49, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x41, 0x44, 0x49, 0x22, 0x52, 0x0a,
	0x1a, 0x41, 0x44, 0x49, 0x45, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x4d, 0x49, 0x44, 0x12, 0x10, 0x0a,
	0x03, 0x4f, 0x54, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x4f, 0x54, 0x50, 0x12,
	0x10, 0x0a, 0x03, 0x41, 0x44, 0x49, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x41, 0x44,
	0x49, 0x22, 0x2a, 0x0a, 0x14, 0x41, 0x62, 0x73, 0x69, 0x6e, 0x74, 0x68, 0x65, 0x48, 0x65, 0x6c,
	0x6c, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x3b, 0x0a,
	0x15, 0x41, 0x62, 0x73, 0x69, 0x6e, 0x74, 0x68, 0x65, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x18, 0x41,
	0x62, 0x73, 0x69, 0x6e, 0x74, 0x68, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x49, 0x4b, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x42, 0x49, 0x4b, 0x4b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x42, 0x41, 0x41, 0x43, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x42, 0x41, 0x41, 0x43, 0x65, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x43, 0x65, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x14, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x43, 0x65, 0x72, 0x74, 0x22, 0x1b, 0x0a,
	0x19, 0x41, 0x62, 0x73, 0x69, 0x6e, 0x74, 0x68, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x1d, 0x41, 0x62,
	0x73, 0x69, 0x6e, 0x74, 0x68, 0x65, 0x41, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x22, 0x20, 0x0a, 0x1e, 0x41, 0x62, 0x73, 0x69, 0x6e, 0x74, 0x68, 0x65, 0x41, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x17, 0x41, 0x62, 0x73, 0x69, 0x6e, 0x74, 0x68, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x18, 0x41, 0x62,
	0x73, 0x69, 0x6e, 0x74, 0x68, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x53, 0x65, 0x72, 0x76, 0x4b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x4f, 0x75, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x4b, 0x65, 0x79, 0x22, 0x2d, 0x0a, 0x17, 0x49, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x65, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x43,
	0x65, 0x72, 0x74, 0x22, 0x34, 0x0a, 0x18, 0x49, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x1a, 0x49, 0x6e, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x43, 0x0a, 0x1b, 0x49, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x56, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x56, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x32, 0xa6, 0x0a, 0x0a, 0x0c, 0x43, 0x72, 0x79, 0x70, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x12, 0x1a, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41,
	0x0a, 0x08, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x2e, 0x69, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x69, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x21, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x52, 0x4d, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x12, 0x26, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x52, 0x4d, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68,
	0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x69, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x52, 0x4d, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x1a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x52, 0x4d, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2a, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x52, 0x4d, 0x48, 0x61, 0x6e, 0x64, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x52, 0x4d, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65,
	0x0a, 0x14, 0x41, 0x44, 0x49, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x2e, 0x41, 0x44, 0x49, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x69,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x44, 0x49, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x12, 0x41, 0x44, 0x49, 0x45, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x2e, 0x69, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x44, 0x49, 0x45, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x44, 0x49, 0x45, 0x6e, 0x64,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x41, 0x62, 0x73, 0x69, 0x6e, 0x74,
	0x68, 0x65, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x1d, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2e, 0x41, 0x62, 0x73, 0x69, 0x6e, 0x74, 0x68, 0x65, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x2e, 0x41, 0x62, 0x73, 0x69, 0x6e, 0x74, 0x68, 0x65, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x41, 0x62, 0x73, 0x69,
	0x6e, 0x74, 0x68, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e,
	0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x62, 0x73, 0x69, 0x6e, 0x74, 0x68, 0x65,
	0x41, 0x64, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x62, 0x73, 0x69, 0x6e,
	0x74, 0x68, 0x65, 0x41, 0x64, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x16, 0x41, 0x62, 0x73, 0x69, 0x6e, 0x74,
	0x68, 0x65, 0x41, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x62, 0x73, 0x69, 0x6e,
	0x74, 0x68, 0x65, 0x41, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x2e, 0x41, 0x62, 0x73, 0x69, 0x6e, 0x74, 0x68, 0x65, 0x41, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x10, 0x41, 0x62, 0x73, 0x69, 0x6e, 0x74, 0x68, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2e, 0x41, 0x62, 0x73, 0x69, 0x6e, 0x74, 0x68, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x69, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x2e, 0x41, 0x62, 0x73, 0x69, 0x6e, 0x74, 0x68, 0x65, 0x53, 0x69, 0x67, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59,
	0x0a, 0x10, 0x49, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x49,
	0x6e, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x13, 0x49, 0x6e, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x1e, 0x5a,
	0x1c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x64, 0x79, 0x70,
	0x72, 0x6f, 0x38, 0x38, 0x38, 0x2f, 0x69, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_crypto_proto_rawDescOnce sync.Once
	file_crypto_proto_rawDescData = file_crypto_proto_rawDesc
)

func file_crypto_proto_rawDescGZIP() []byte {
	file_crypto_proto_rawDescOnce.Do(func() {
		file_crypto_proto_rawDescData = protoimpl.X.CompressGZIP(file_crypto_proto_rawDescData)
	})
	return file_crypto_proto_rawDescData
}

var file_crypto_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_crypto_proto_goTypes = []interface{}{
	(*InitializeRequest)(nil),                  // 0: icrypto.InitializeRequest
	(*InitializeResponse)(nil),                 // 1: icrypto.InitializeResponse
	(*FinalizeRequest)(nil),                    // 2: icrypto.FinalizeRequest
	(*FinalizeResponse)(nil),                   // 3: icrypto.FinalizeResponse
	(*ActivationRequest)(nil),                  // 4: icrypto.ActivationRequest
	(*ActivationResponse)(nil),                 // 5: icrypto.ActivationResponse
	(*ActivationKeyDataRequest)(nil),           // 6: icrypto.ActivationKeyDataRequest
	(*ActivationKeyDataResponse)(nil),          // 7: icrypto.ActivationKeyDataResponse
	(*ActivationDRMHandshakeRequest)(nil),      // 8: icrypto.ActivationDRMHandshakeRequest
	(*ActivationDRMHandshakeResponse)(nil),     // 9: icrypto.ActivationDRMHandshakeResponse
	(*ActivationDRMHandshakeInfoRequest)(nil),  // 10: icrypto.ActivationDRMHandshakeInfoRequest
	(*ActivationDRMHandshakeInfoResponse)(nil), // 11: icrypto.ActivationDRMHandshakeInfoResponse
	(*ADIStartProvisioningRequest)(nil),        // 12: icrypto.ADIStartProvisioningRequest
	(*ADIStartProvisioningResponse)(nil),       // 13: icrypto.ADIStartProvisioningResponse
	(*ADIEndProvisioningRequest)(nil),          // 14: icrypto.ADIEndProvisioningRequest
	(*ADIEndProvisioningResponse)(nil),         // 15: icrypto.ADIEndProvisioningResponse
	(*AbsintheHelloRequest)(nil),               // 16: icrypto.AbsintheHelloRequest
	(*AbsintheHelloResponse)(nil),              // 17: icrypto.AbsintheHelloResponse
	(*AbsintheAddOptionRequest)(nil),           // 18: icrypto.AbsintheAddOptionRequest
	(*AbsintheAddOptionResponse)(nil),          // 19: icrypto.AbsintheAddOptionResponse
	(*AbsintheAtivateSessionRequest)(nil),      // 20: icrypto.AbsintheAtivateSessionRequest
	(*AbsintheAtivateSessionResponse)(nil),     // 21: icrypto.AbsintheAtivateSessionResponse
	(*AbsintheSignDataRequest)(nil),            // 22: icrypto.AbsintheSignDataRequest
	(*AbsintheSignDataResponse)(nil),           // 23: icrypto.AbsintheSignDataResponse
	(*IndentitySessionRequest)(nil),            // 24: icrypto.IndentitySessionRequest
	(*IndentitySessionResponse)(nil),           // 25: icrypto.IndentitySessionResponse
	(*IndentityValidationRequest)(nil),         // 26: icrypto.IndentityValidationRequest
	(*IndentityValidationResponse)(nil),        // 27: icrypto.IndentityValidationResponse
}
var file_crypto_proto_depIdxs = []int32{
	0,  // 0: icrypto.CryptService.Initialize:input_type -> icrypto.InitializeRequest
	2,  // 1: icrypto.CryptService.Finalize:input_type -> icrypto.FinalizeRequest
	4,  // 2: icrypto.CryptService.Activation:input_type -> icrypto.ActivationRequest
	6,  // 3: icrypto.CryptService.ActivationKeyData:input_type -> icrypto.ActivationKeyDataRequest
	8,  // 4: icrypto.CryptService.ActivationDRMHandshake:input_type -> icrypto.ActivationDRMHandshakeRequest
	10, // 5: icrypto.CryptService.ActivationDRMHandshakeInfo:input_type -> icrypto.ActivationDRMHandshakeInfoRequest
	12, // 6: icrypto.CryptService.ADIStartProvisioning:input_type -> icrypto.ADIStartProvisioningRequest
	14, // 7: icrypto.CryptService.ADIEndProvisioning:input_type -> icrypto.ADIEndProvisioningRequest
	16, // 8: icrypto.CryptService.AbsintheHello:input_type -> icrypto.AbsintheHelloRequest
	18, // 9: icrypto.CryptService.AbsintheAddOption:input_type -> icrypto.AbsintheAddOptionRequest
	20, // 10: icrypto.CryptService.AbsintheAtivateSession:input_type -> icrypto.AbsintheAtivateSessionRequest
	22, // 11: icrypto.CryptService.AbsintheSignData:input_type -> icrypto.AbsintheSignDataRequest
	24, // 12: icrypto.CryptService.IndentitySession:input_type -> icrypto.IndentitySessionRequest
	26, // 13: icrypto.CryptService.IndentityValidation:input_type -> icrypto.IndentityValidationRequest
	1,  // 14: icrypto.CryptService.Initialize:output_type -> icrypto.InitializeResponse
	3,  // 15: icrypto.CryptService.Finalize:output_type -> icrypto.FinalizeResponse
	5,  // 16: icrypto.CryptService.Activation:output_type -> icrypto.ActivationResponse
	7,  // 17: icrypto.CryptService.ActivationKeyData:output_type -> icrypto.ActivationKeyDataResponse
	9,  // 18: icrypto.CryptService.ActivationDRMHandshake:output_type -> icrypto.ActivationDRMHandshakeResponse
	11, // 19: icrypto.CryptService.ActivationDRMHandshakeInfo:output_type -> icrypto.ActivationDRMHandshakeInfoResponse
	13, // 20: icrypto.CryptService.ADIStartProvisioning:output_type -> icrypto.ADIStartProvisioningResponse
	15, // 21: icrypto.CryptService.ADIEndProvisioning:output_type -> icrypto.ADIEndProvisioningResponse
	17, // 22: icrypto.CryptService.AbsintheHello:output_type -> icrypto.AbsintheHelloResponse
	19, // 23: icrypto.CryptService.AbsintheAddOption:output_type -> icrypto.AbsintheAddOptionResponse
	21, // 24: icrypto.CryptService.AbsintheAtivateSession:output_type -> icrypto.AbsintheAtivateSessionResponse
	23, // 25: icrypto.CryptService.AbsintheSignData:output_type -> icrypto.AbsintheSignDataResponse
	25, // 26: icrypto.CryptService.IndentitySession:output_type -> icrypto.IndentitySessionResponse
	27, // 27: icrypto.CryptService.IndentityValidation:output_type -> icrypto.IndentityValidationResponse
	14, // [14:28] is the sub-list for method output_type
	0,  // [0:14] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_crypto_proto_init() }
func file_crypto_proto_init() {
	if File_crypto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_crypto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivationKeyDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivationKeyDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivationDRMHandshakeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivationDRMHandshakeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivationDRMHandshakeInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivationDRMHandshakeInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ADIStartProvisioningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ADIStartProvisioningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ADIEndProvisioningRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ADIEndProvisioningResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbsintheHelloRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbsintheHelloResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbsintheAddOptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbsintheAddOptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbsintheAtivateSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbsintheAtivateSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbsintheSignDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbsintheSignDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndentitySessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndentitySessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndentityValidationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_crypto_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndentityValidationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_crypto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crypto_proto_goTypes,
		DependencyIndexes: file_crypto_proto_depIdxs,
		MessageInfos:      file_crypto_proto_msgTypes,
	}.Build()
	File_crypto_proto = out.File
	file_crypto_proto_rawDesc = nil
	file_crypto_proto_goTypes = nil
	file_crypto_proto_depIdxs = nil
}
