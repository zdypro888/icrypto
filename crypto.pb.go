// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: crypto.proto

package icrypto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InitializeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Control       uint64                 `protobuf:"varint,1,opt,name=Control,proto3" json:"Control,omitempty"`
	DevicePlist   []byte                 `protobuf:"bytes,2,opt,name=DevicePlist,proto3" json:"DevicePlist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeRequest) Reset() {
	*x = InitializeRequest{}
	mi := &file_crypto_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeRequest) ProtoMessage() {}

func (x *InitializeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeRequest.ProtoReflect.Descriptor instead.
func (*InitializeRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{0}
}

func (x *InitializeRequest) GetControl() uint64 {
	if x != nil {
		return x.Control
	}
	return 0
}

func (x *InitializeRequest) GetDevicePlist() []byte {
	if x != nil {
		return x.DevicePlist
	}
	return nil
}

type InitializeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitializeResponse) Reset() {
	*x = InitializeResponse{}
	mi := &file_crypto_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitializeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializeResponse) ProtoMessage() {}

func (x *InitializeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializeResponse.ProtoReflect.Descriptor instead.
func (*InitializeResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{1}
}

type FinalizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeRequest) Reset() {
	*x = FinalizeRequest{}
	mi := &file_crypto_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeRequest) ProtoMessage() {}

func (x *FinalizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeRequest.ProtoReflect.Descriptor instead.
func (*FinalizeRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{2}
}

type FinalizeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeResponse) Reset() {
	*x = FinalizeResponse{}
	mi := &file_crypto_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeResponse) ProtoMessage() {}

func (x *FinalizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeResponse.ProtoReflect.Descriptor instead.
func (*FinalizeResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{3}
}

type ActivationDRMHandshakeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivationDRMHandshakeRequest) Reset() {
	*x = ActivationDRMHandshakeRequest{}
	mi := &file_crypto_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivationDRMHandshakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationDRMHandshakeRequest) ProtoMessage() {}

func (x *ActivationDRMHandshakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationDRMHandshakeRequest.ProtoReflect.Descriptor instead.
func (*ActivationDRMHandshakeRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{4}
}

type ActivationDRMHandshakeResponse struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	CollectionBlob          []byte                 `protobuf:"bytes,1,opt,name=CollectionBlob,proto3" json:"CollectionBlob,omitempty"`
	HandshakeRequestMessage []byte                 `protobuf:"bytes,2,opt,name=HandshakeRequestMessage,proto3" json:"HandshakeRequestMessage,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ActivationDRMHandshakeResponse) Reset() {
	*x = ActivationDRMHandshakeResponse{}
	mi := &file_crypto_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivationDRMHandshakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationDRMHandshakeResponse) ProtoMessage() {}

func (x *ActivationDRMHandshakeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationDRMHandshakeResponse.ProtoReflect.Descriptor instead.
func (*ActivationDRMHandshakeResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{5}
}

func (x *ActivationDRMHandshakeResponse) GetCollectionBlob() []byte {
	if x != nil {
		return x.CollectionBlob
	}
	return nil
}

func (x *ActivationDRMHandshakeResponse) GetHandshakeRequestMessage() []byte {
	if x != nil {
		return x.HandshakeRequestMessage
	}
	return nil
}

type ActivationDRMProcessRequest struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	SUInfo                   []byte                 `protobuf:"bytes,1,opt,name=SUInfo,proto3" json:"SUInfo,omitempty"`
	HandshakeResponseMessage []byte                 `protobuf:"bytes,2,opt,name=HandshakeResponseMessage,proto3" json:"HandshakeResponseMessage,omitempty"`
	ServerKP                 []byte                 `protobuf:"bytes,3,opt,name=serverKP,proto3" json:"serverKP,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ActivationDRMProcessRequest) Reset() {
	*x = ActivationDRMProcessRequest{}
	mi := &file_crypto_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivationDRMProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationDRMProcessRequest) ProtoMessage() {}

func (x *ActivationDRMProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationDRMProcessRequest.ProtoReflect.Descriptor instead.
func (*ActivationDRMProcessRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{6}
}

func (x *ActivationDRMProcessRequest) GetSUInfo() []byte {
	if x != nil {
		return x.SUInfo
	}
	return nil
}

func (x *ActivationDRMProcessRequest) GetHandshakeResponseMessage() []byte {
	if x != nil {
		return x.HandshakeResponseMessage
	}
	return nil
}

func (x *ActivationDRMProcessRequest) GetServerKP() []byte {
	if x != nil {
		return x.ServerKP
	}
	return nil
}

type ActivationDRMProcessResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UIK           []byte                 `protobuf:"bytes,1,opt,name=UIK,proto3" json:"UIK,omitempty"`
	RK            []byte                 `protobuf:"bytes,2,opt,name=RK,proto3" json:"RK,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivationDRMProcessResponse) Reset() {
	*x = ActivationDRMProcessResponse{}
	mi := &file_crypto_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivationDRMProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationDRMProcessResponse) ProtoMessage() {}

func (x *ActivationDRMProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationDRMProcessResponse.ProtoReflect.Descriptor instead.
func (*ActivationDRMProcessResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{7}
}

func (x *ActivationDRMProcessResponse) GetUIK() []byte {
	if x != nil {
		return x.UIK
	}
	return nil
}

func (x *ActivationDRMProcessResponse) GetRK() []byte {
	if x != nil {
		return x.RK
	}
	return nil
}

type ActivationDRMSignatureRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ActivationInfoXML []byte                 `protobuf:"bytes,1,opt,name=ActivationInfoXML,proto3" json:"ActivationInfoXML,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ActivationDRMSignatureRequest) Reset() {
	*x = ActivationDRMSignatureRequest{}
	mi := &file_crypto_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivationDRMSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationDRMSignatureRequest) ProtoMessage() {}

func (x *ActivationDRMSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationDRMSignatureRequest.ProtoReflect.Descriptor instead.
func (*ActivationDRMSignatureRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{8}
}

func (x *ActivationDRMSignatureRequest) GetActivationInfoXML() []byte {
	if x != nil {
		return x.ActivationInfoXML
	}
	return nil
}

type ActivationDRMSignatureRespone struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	FairPlayCertChain []byte                 `protobuf:"bytes,1,opt,name=FairPlayCertChain,proto3" json:"FairPlayCertChain,omitempty"`
	FairPlaySignature []byte                 `protobuf:"bytes,2,opt,name=FairPlaySignature,proto3" json:"FairPlaySignature,omitempty"`
	RKSignature       []byte                 `protobuf:"bytes,3,opt,name=RKSignature,proto3" json:"RKSignature,omitempty"`
	SignActRequest    []byte                 `protobuf:"bytes,4,opt,name=SignActRequest,proto3" json:"SignActRequest,omitempty"`
	ServerKP          []byte                 `protobuf:"bytes,5,opt,name=ServerKP,proto3" json:"ServerKP,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ActivationDRMSignatureRespone) Reset() {
	*x = ActivationDRMSignatureRespone{}
	mi := &file_crypto_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivationDRMSignatureRespone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationDRMSignatureRespone) ProtoMessage() {}

func (x *ActivationDRMSignatureRespone) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationDRMSignatureRespone.ProtoReflect.Descriptor instead.
func (*ActivationDRMSignatureRespone) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{9}
}

func (x *ActivationDRMSignatureRespone) GetFairPlayCertChain() []byte {
	if x != nil {
		return x.FairPlayCertChain
	}
	return nil
}

func (x *ActivationDRMSignatureRespone) GetFairPlaySignature() []byte {
	if x != nil {
		return x.FairPlaySignature
	}
	return nil
}

func (x *ActivationDRMSignatureRespone) GetRKSignature() []byte {
	if x != nil {
		return x.RKSignature
	}
	return nil
}

func (x *ActivationDRMSignatureRespone) GetSignActRequest() []byte {
	if x != nil {
		return x.SignActRequest
	}
	return nil
}

func (x *ActivationDRMSignatureRespone) GetServerKP() []byte {
	if x != nil {
		return x.ServerKP
	}
	return nil
}

type ActivationDeprecatedRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ActivationInfoXML []byte                 `protobuf:"bytes,1,opt,name=ActivationInfoXML,proto3" json:"ActivationInfoXML,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ActivationDeprecatedRequest) Reset() {
	*x = ActivationDeprecatedRequest{}
	mi := &file_crypto_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivationDeprecatedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationDeprecatedRequest) ProtoMessage() {}

func (x *ActivationDeprecatedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationDeprecatedRequest.ProtoReflect.Descriptor instead.
func (*ActivationDeprecatedRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{10}
}

func (x *ActivationDeprecatedRequest) GetActivationInfoXML() []byte {
	if x != nil {
		return x.ActivationInfoXML
	}
	return nil
}

type ActivationDeprecatedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sign          []byte                 `protobuf:"bytes,1,opt,name=Sign,proto3" json:"Sign,omitempty"`
	Cert          []byte                 `protobuf:"bytes,2,opt,name=Cert,proto3" json:"Cert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivationDeprecatedResponse) Reset() {
	*x = ActivationDeprecatedResponse{}
	mi := &file_crypto_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivationDeprecatedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationDeprecatedResponse) ProtoMessage() {}

func (x *ActivationDeprecatedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationDeprecatedResponse.ProtoReflect.Descriptor instead.
func (*ActivationDeprecatedResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{11}
}

func (x *ActivationDeprecatedResponse) GetSign() []byte {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *ActivationDeprecatedResponse) GetCert() []byte {
	if x != nil {
		return x.Cert
	}
	return nil
}

type ActivationRecordRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Unbrick                 bool                   `protobuf:"varint,1,opt,name=Unbrick,proto3" json:"Unbrick,omitempty"`
	AccountTokenCertificate []byte                 `protobuf:"bytes,2,opt,name=AccountTokenCertificate,proto3" json:"AccountTokenCertificate,omitempty"`
	DeviceCertificate       []byte                 `protobuf:"bytes,3,opt,name=DeviceCertificate,proto3" json:"DeviceCertificate,omitempty"`
	RegulatoryInfo          []byte                 `protobuf:"bytes,4,opt,name=RegulatoryInfo,proto3" json:"RegulatoryInfo,omitempty"`
	FairPlayKeyData         []byte                 `protobuf:"bytes,5,opt,name=FairPlayKeyData,proto3" json:"FairPlayKeyData,omitempty"`
	AccountToken            []byte                 `protobuf:"bytes,6,opt,name=AccountToken,proto3" json:"AccountToken,omitempty"`
	AccountTokenSignature   []byte                 `protobuf:"bytes,7,opt,name=AccountTokenSignature,proto3" json:"AccountTokenSignature,omitempty"`
	UniqueDeviceCertificate []byte                 `protobuf:"bytes,8,opt,name=UniqueDeviceCertificate,proto3" json:"UniqueDeviceCertificate,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ActivationRecordRequest) Reset() {
	*x = ActivationRecordRequest{}
	mi := &file_crypto_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivationRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationRecordRequest) ProtoMessage() {}

func (x *ActivationRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationRecordRequest.ProtoReflect.Descriptor instead.
func (*ActivationRecordRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{12}
}

func (x *ActivationRecordRequest) GetUnbrick() bool {
	if x != nil {
		return x.Unbrick
	}
	return false
}

func (x *ActivationRecordRequest) GetAccountTokenCertificate() []byte {
	if x != nil {
		return x.AccountTokenCertificate
	}
	return nil
}

func (x *ActivationRecordRequest) GetDeviceCertificate() []byte {
	if x != nil {
		return x.DeviceCertificate
	}
	return nil
}

func (x *ActivationRecordRequest) GetRegulatoryInfo() []byte {
	if x != nil {
		return x.RegulatoryInfo
	}
	return nil
}

func (x *ActivationRecordRequest) GetFairPlayKeyData() []byte {
	if x != nil {
		return x.FairPlayKeyData
	}
	return nil
}

func (x *ActivationRecordRequest) GetAccountToken() []byte {
	if x != nil {
		return x.AccountToken
	}
	return nil
}

func (x *ActivationRecordRequest) GetAccountTokenSignature() []byte {
	if x != nil {
		return x.AccountTokenSignature
	}
	return nil
}

func (x *ActivationRecordRequest) GetUniqueDeviceCertificate() []byte {
	if x != nil {
		return x.UniqueDeviceCertificate
	}
	return nil
}

type ActivationRecordResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubCAKey       []byte                 `protobuf:"bytes,1,opt,name=SubCAKey,proto3" json:"SubCAKey,omitempty"`
	AttestationKey []byte                 `protobuf:"bytes,2,opt,name=AttestationKey,proto3" json:"AttestationKey,omitempty"`
	UIK            []byte                 `protobuf:"bytes,3,opt,name=UIK,proto3" json:"UIK,omitempty"`
	RK             []byte                 `protobuf:"bytes,4,opt,name=RK,proto3" json:"RK,omitempty"`
	PSCSui         []byte                 `protobuf:"bytes,5,opt,name=PSCSui,proto3" json:"PSCSui,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ActivationRecordResponse) Reset() {
	*x = ActivationRecordResponse{}
	mi := &file_crypto_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivationRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivationRecordResponse) ProtoMessage() {}

func (x *ActivationRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivationRecordResponse.ProtoReflect.Descriptor instead.
func (*ActivationRecordResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{13}
}

func (x *ActivationRecordResponse) GetSubCAKey() []byte {
	if x != nil {
		return x.SubCAKey
	}
	return nil
}

func (x *ActivationRecordResponse) GetAttestationKey() []byte {
	if x != nil {
		return x.AttestationKey
	}
	return nil
}

func (x *ActivationRecordResponse) GetUIK() []byte {
	if x != nil {
		return x.UIK
	}
	return nil
}

func (x *ActivationRecordResponse) GetRK() []byte {
	if x != nil {
		return x.RK
	}
	return nil
}

func (x *ActivationRecordResponse) GetPSCSui() []byte {
	if x != nil {
		return x.PSCSui
	}
	return nil
}

type ADIStartProvisioningRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DSID          int64                  `protobuf:"varint,1,opt,name=DSID,proto3" json:"DSID,omitempty"`
	SPIM          []byte                 `protobuf:"bytes,2,opt,name=SPIM,proto3" json:"SPIM,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ADIStartProvisioningRequest) Reset() {
	*x = ADIStartProvisioningRequest{}
	mi := &file_crypto_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ADIStartProvisioningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ADIStartProvisioningRequest) ProtoMessage() {}

func (x *ADIStartProvisioningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ADIStartProvisioningRequest.ProtoReflect.Descriptor instead.
func (*ADIStartProvisioningRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{14}
}

func (x *ADIStartProvisioningRequest) GetDSID() int64 {
	if x != nil {
		return x.DSID
	}
	return 0
}

func (x *ADIStartProvisioningRequest) GetSPIM() []byte {
	if x != nil {
		return x.SPIM
	}
	return nil
}

type ADIStartProvisioningResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Session       uint64                 `protobuf:"varint,1,opt,name=Session,proto3" json:"Session,omitempty"`
	CPIM          []byte                 `protobuf:"bytes,2,opt,name=CPIM,proto3" json:"CPIM,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ADIStartProvisioningResponse) Reset() {
	*x = ADIStartProvisioningResponse{}
	mi := &file_crypto_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ADIStartProvisioningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ADIStartProvisioningResponse) ProtoMessage() {}

func (x *ADIStartProvisioningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ADIStartProvisioningResponse.ProtoReflect.Descriptor instead.
func (*ADIStartProvisioningResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{15}
}

func (x *ADIStartProvisioningResponse) GetSession() uint64 {
	if x != nil {
		return x.Session
	}
	return 0
}

func (x *ADIStartProvisioningResponse) GetCPIM() []byte {
	if x != nil {
		return x.CPIM
	}
	return nil
}

type ADIEndProvisioningRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Session       uint64                 `protobuf:"varint,1,opt,name=Session,proto3" json:"Session,omitempty"`
	DSID          int64                  `protobuf:"varint,2,opt,name=DSID,proto3" json:"DSID,omitempty"`
	RINFO         int64                  `protobuf:"varint,3,opt,name=RINFO,proto3" json:"RINFO,omitempty"`
	PTM           []byte                 `protobuf:"bytes,4,opt,name=PTM,proto3" json:"PTM,omitempty"`
	TK            []byte                 `protobuf:"bytes,5,opt,name=TK,proto3" json:"TK,omitempty"`
	ADI           []byte                 `protobuf:"bytes,10,opt,name=ADI,proto3" json:"ADI,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ADIEndProvisioningRequest) Reset() {
	*x = ADIEndProvisioningRequest{}
	mi := &file_crypto_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ADIEndProvisioningRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ADIEndProvisioningRequest) ProtoMessage() {}

func (x *ADIEndProvisioningRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ADIEndProvisioningRequest.ProtoReflect.Descriptor instead.
func (*ADIEndProvisioningRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{16}
}

func (x *ADIEndProvisioningRequest) GetSession() uint64 {
	if x != nil {
		return x.Session
	}
	return 0
}

func (x *ADIEndProvisioningRequest) GetDSID() int64 {
	if x != nil {
		return x.DSID
	}
	return 0
}

func (x *ADIEndProvisioningRequest) GetRINFO() int64 {
	if x != nil {
		return x.RINFO
	}
	return 0
}

func (x *ADIEndProvisioningRequest) GetPTM() []byte {
	if x != nil {
		return x.PTM
	}
	return nil
}

func (x *ADIEndProvisioningRequest) GetTK() []byte {
	if x != nil {
		return x.TK
	}
	return nil
}

func (x *ADIEndProvisioningRequest) GetADI() []byte {
	if x != nil {
		return x.ADI
	}
	return nil
}

type ADIEndProvisioningResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MID           []byte                 `protobuf:"bytes,1,opt,name=MID,proto3" json:"MID,omitempty"`
	OTP           []byte                 `protobuf:"bytes,2,opt,name=OTP,proto3" json:"OTP,omitempty"`
	ADI           []byte                 `protobuf:"bytes,10,opt,name=ADI,proto3" json:"ADI,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ADIEndProvisioningResponse) Reset() {
	*x = ADIEndProvisioningResponse{}
	mi := &file_crypto_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ADIEndProvisioningResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ADIEndProvisioningResponse) ProtoMessage() {}

func (x *ADIEndProvisioningResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ADIEndProvisioningResponse.ProtoReflect.Descriptor instead.
func (*ADIEndProvisioningResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{17}
}

func (x *ADIEndProvisioningResponse) GetMID() []byte {
	if x != nil {
		return x.MID
	}
	return nil
}

func (x *ADIEndProvisioningResponse) GetOTP() []byte {
	if x != nil {
		return x.OTP
	}
	return nil
}

func (x *ADIEndProvisioningResponse) GetADI() []byte {
	if x != nil {
		return x.ADI
	}
	return nil
}

type ADIGenerateLoginCodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DSID          int64                  `protobuf:"varint,1,opt,name=DSID,proto3" json:"DSID,omitempty"`
	ADI           []byte                 `protobuf:"bytes,2,opt,name=ADI,proto3" json:"ADI,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ADIGenerateLoginCodeRequest) Reset() {
	*x = ADIGenerateLoginCodeRequest{}
	mi := &file_crypto_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ADIGenerateLoginCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ADIGenerateLoginCodeRequest) ProtoMessage() {}

func (x *ADIGenerateLoginCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ADIGenerateLoginCodeRequest.ProtoReflect.Descriptor instead.
func (*ADIGenerateLoginCodeRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{18}
}

func (x *ADIGenerateLoginCodeRequest) GetDSID() int64 {
	if x != nil {
		return x.DSID
	}
	return 0
}

func (x *ADIGenerateLoginCodeRequest) GetADI() []byte {
	if x != nil {
		return x.ADI
	}
	return nil
}

type ADIGenerateLoginCodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	LoginCode     uint32                 `protobuf:"varint,2,opt,name=LoginCode,proto3" json:"LoginCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ADIGenerateLoginCodeResponse) Reset() {
	*x = ADIGenerateLoginCodeResponse{}
	mi := &file_crypto_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ADIGenerateLoginCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ADIGenerateLoginCodeResponse) ProtoMessage() {}

func (x *ADIGenerateLoginCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ADIGenerateLoginCodeResponse.ProtoReflect.Descriptor instead.
func (*ADIGenerateLoginCodeResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{19}
}

func (x *ADIGenerateLoginCodeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ADIGenerateLoginCodeResponse) GetLoginCode() uint32 {
	if x != nil {
		return x.LoginCode
	}
	return 0
}

type AbsintheHelloRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mode          int32                  `protobuf:"varint,1,opt,name=Mode,proto3" json:"Mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbsintheHelloRequest) Reset() {
	*x = AbsintheHelloRequest{}
	mi := &file_crypto_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbsintheHelloRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheHelloRequest) ProtoMessage() {}

func (x *AbsintheHelloRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheHelloRequest.ProtoReflect.Descriptor instead.
func (*AbsintheHelloRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{20}
}

func (x *AbsintheHelloRequest) GetMode() int32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type AbsintheHelloResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HelloMessage  []byte                 `protobuf:"bytes,1,opt,name=HelloMessage,proto3" json:"HelloMessage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbsintheHelloResponse) Reset() {
	*x = AbsintheHelloResponse{}
	mi := &file_crypto_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbsintheHelloResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheHelloResponse) ProtoMessage() {}

func (x *AbsintheHelloResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheHelloResponse.ProtoReflect.Descriptor instead.
func (*AbsintheHelloResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{21}
}

func (x *AbsintheHelloResponse) GetHelloMessage() []byte {
	if x != nil {
		return x.HelloMessage
	}
	return nil
}

type AbsintheAddOptionRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	BIKKey               []byte                 `protobuf:"bytes,1,opt,name=BIKKey,proto3" json:"BIKKey,omitempty"`
	BAACert              []byte                 `protobuf:"bytes,2,opt,name=BAACert,proto3" json:"BAACert,omitempty"`
	IntermediateRootCert []byte                 `protobuf:"bytes,3,opt,name=IntermediateRootCert,proto3" json:"IntermediateRootCert,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AbsintheAddOptionRequest) Reset() {
	*x = AbsintheAddOptionRequest{}
	mi := &file_crypto_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbsintheAddOptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheAddOptionRequest) ProtoMessage() {}

func (x *AbsintheAddOptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheAddOptionRequest.ProtoReflect.Descriptor instead.
func (*AbsintheAddOptionRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{22}
}

func (x *AbsintheAddOptionRequest) GetBIKKey() []byte {
	if x != nil {
		return x.BIKKey
	}
	return nil
}

func (x *AbsintheAddOptionRequest) GetBAACert() []byte {
	if x != nil {
		return x.BAACert
	}
	return nil
}

func (x *AbsintheAddOptionRequest) GetIntermediateRootCert() []byte {
	if x != nil {
		return x.IntermediateRootCert
	}
	return nil
}

type AbsintheAddOptionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbsintheAddOptionResponse) Reset() {
	*x = AbsintheAddOptionResponse{}
	mi := &file_crypto_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbsintheAddOptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheAddOptionResponse) ProtoMessage() {}

func (x *AbsintheAddOptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheAddOptionResponse.ProtoReflect.Descriptor instead.
func (*AbsintheAddOptionResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{23}
}

type AbsintheAtivateSessionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ValidationData []byte                 `protobuf:"bytes,1,opt,name=ValidationData,proto3" json:"ValidationData,omitempty"`
	ServerKey      []byte                 `protobuf:"bytes,2,opt,name=ServerKey,proto3" json:"ServerKey,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AbsintheAtivateSessionRequest) Reset() {
	*x = AbsintheAtivateSessionRequest{}
	mi := &file_crypto_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbsintheAtivateSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheAtivateSessionRequest) ProtoMessage() {}

func (x *AbsintheAtivateSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheAtivateSessionRequest.ProtoReflect.Descriptor instead.
func (*AbsintheAtivateSessionRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{24}
}

func (x *AbsintheAtivateSessionRequest) GetValidationData() []byte {
	if x != nil {
		return x.ValidationData
	}
	return nil
}

func (x *AbsintheAtivateSessionRequest) GetServerKey() []byte {
	if x != nil {
		return x.ServerKey
	}
	return nil
}

type AbsintheAtivateSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbsintheAtivateSessionResponse) Reset() {
	*x = AbsintheAtivateSessionResponse{}
	mi := &file_crypto_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbsintheAtivateSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheAtivateSessionResponse) ProtoMessage() {}

func (x *AbsintheAtivateSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheAtivateSessionResponse.ProtoReflect.Descriptor instead.
func (*AbsintheAtivateSessionResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{25}
}

type AbsintheSignDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SignData      []byte                 `protobuf:"bytes,1,opt,name=SignData,proto3" json:"SignData,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbsintheSignDataRequest) Reset() {
	*x = AbsintheSignDataRequest{}
	mi := &file_crypto_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbsintheSignDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheSignDataRequest) ProtoMessage() {}

func (x *AbsintheSignDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheSignDataRequest.ProtoReflect.Descriptor instead.
func (*AbsintheSignDataRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{26}
}

func (x *AbsintheSignDataRequest) GetSignData() []byte {
	if x != nil {
		return x.SignData
	}
	return nil
}

type AbsintheSignDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signature     []byte                 `protobuf:"bytes,1,opt,name=Signature,proto3" json:"Signature,omitempty"`
	OutServKey    []byte                 `protobuf:"bytes,2,opt,name=OutServKey,proto3" json:"OutServKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbsintheSignDataResponse) Reset() {
	*x = AbsintheSignDataResponse{}
	mi := &file_crypto_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbsintheSignDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsintheSignDataResponse) ProtoMessage() {}

func (x *AbsintheSignDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsintheSignDataResponse.ProtoReflect.Descriptor instead.
func (*AbsintheSignDataResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{27}
}

func (x *AbsintheSignDataResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *AbsintheSignDataResponse) GetOutServKey() []byte {
	if x != nil {
		return x.OutServKey
	}
	return nil
}

type IndentitySessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cert          []byte                 `protobuf:"bytes,1,opt,name=Cert,proto3" json:"Cert,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndentitySessionRequest) Reset() {
	*x = IndentitySessionRequest{}
	mi := &file_crypto_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndentitySessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndentitySessionRequest) ProtoMessage() {}

func (x *IndentitySessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndentitySessionRequest.ProtoReflect.Descriptor instead.
func (*IndentitySessionRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{28}
}

func (x *IndentitySessionRequest) GetCert() []byte {
	if x != nil {
		return x.Cert
	}
	return nil
}

type IndentitySessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       []byte                 `protobuf:"bytes,1,opt,name=Request,proto3" json:"Request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndentitySessionResponse) Reset() {
	*x = IndentitySessionResponse{}
	mi := &file_crypto_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndentitySessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndentitySessionResponse) ProtoMessage() {}

func (x *IndentitySessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndentitySessionResponse.ProtoReflect.Descriptor instead.
func (*IndentitySessionResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{29}
}

func (x *IndentitySessionResponse) GetRequest() []byte {
	if x != nil {
		return x.Request
	}
	return nil
}

type IndentityValidationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      []byte                 `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	SignData      []byte                 `protobuf:"bytes,2,opt,name=SignData,proto3" json:"SignData,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndentityValidationRequest) Reset() {
	*x = IndentityValidationRequest{}
	mi := &file_crypto_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndentityValidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndentityValidationRequest) ProtoMessage() {}

func (x *IndentityValidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndentityValidationRequest.ProtoReflect.Descriptor instead.
func (*IndentityValidationRequest) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{30}
}

func (x *IndentityValidationRequest) GetResponse() []byte {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *IndentityValidationRequest) GetSignData() []byte {
	if x != nil {
		return x.SignData
	}
	return nil
}

type IndentityValidationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VlidationData []byte                 `protobuf:"bytes,1,opt,name=VlidationData,proto3" json:"VlidationData,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndentityValidationResponse) Reset() {
	*x = IndentityValidationResponse{}
	mi := &file_crypto_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndentityValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndentityValidationResponse) ProtoMessage() {}

func (x *IndentityValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crypto_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndentityValidationResponse.ProtoReflect.Descriptor instead.
func (*IndentityValidationResponse) Descriptor() ([]byte, []int) {
	return file_crypto_proto_rawDescGZIP(), []int{31}
}

func (x *IndentityValidationResponse) GetVlidationData() []byte {
	if x != nil {
		return x.VlidationData
	}
	return nil
}

var File_crypto_proto protoreflect.FileDescriptor

const file_crypto_proto_rawDesc = "" +
	"\n" +
	"\fcrypto.proto\x12\aicrypto\"O\n" +
	"\x11InitializeRequest\x12\x18\n" +
	"\aControl\x18\x01 \x01(\x04R\aControl\x12 \n" +
	"\vDevicePlist\x18\x02 \x01(\fR\vDevicePlist\"\x14\n" +
	"\x12InitializeResponse\"\x11\n" +
	"\x0fFinalizeRequest\"\x12\n" +
	"\x10FinalizeResponse\"\x1f\n" +
	"\x1dActivationDRMHandshakeRequest\"\x82\x01\n" +
	"\x1eActivationDRMHandshakeResponse\x12&\n" +
	"\x0eCollectionBlob\x18\x01 \x01(\fR\x0eCollectionBlob\x128\n" +
	"\x17HandshakeRequestMessage\x18\x02 \x01(\fR\x17HandshakeRequestMessage\"\x8d\x01\n" +
	"\x1bActivationDRMProcessRequest\x12\x16\n" +
	"\x06SUInfo\x18\x01 \x01(\fR\x06SUInfo\x12:\n" +
	"\x18HandshakeResponseMessage\x18\x02 \x01(\fR\x18HandshakeResponseMessage\x12\x1a\n" +
	"\bserverKP\x18\x03 \x01(\fR\bserverKP\"@\n" +
	"\x1cActivationDRMProcessResponse\x12\x10\n" +
	"\x03UIK\x18\x01 \x01(\fR\x03UIK\x12\x0e\n" +
	"\x02RK\x18\x02 \x01(\fR\x02RK\"M\n" +
	"\x1dActivationDRMSignatureRequest\x12,\n" +
	"\x11ActivationInfoXML\x18\x01 \x01(\fR\x11ActivationInfoXML\"\xe1\x01\n" +
	"\x1dActivationDRMSignatureRespone\x12,\n" +
	"\x11FairPlayCertChain\x18\x01 \x01(\fR\x11FairPlayCertChain\x12,\n" +
	"\x11FairPlaySignature\x18\x02 \x01(\fR\x11FairPlaySignature\x12 \n" +
	"\vRKSignature\x18\x03 \x01(\fR\vRKSignature\x12&\n" +
	"\x0eSignActRequest\x18\x04 \x01(\fR\x0eSignActRequest\x12\x1a\n" +
	"\bServerKP\x18\x05 \x01(\fR\bServerKP\"K\n" +
	"\x1bActivationDeprecatedRequest\x12,\n" +
	"\x11ActivationInfoXML\x18\x01 \x01(\fR\x11ActivationInfoXML\"F\n" +
	"\x1cActivationDeprecatedResponse\x12\x12\n" +
	"\x04Sign\x18\x01 \x01(\fR\x04Sign\x12\x12\n" +
	"\x04Cert\x18\x02 \x01(\fR\x04Cert\"\x81\x03\n" +
	"\x17ActivationRecordRequest\x12\x18\n" +
	"\aUnbrick\x18\x01 \x01(\bR\aUnbrick\x128\n" +
	"\x17AccountTokenCertificate\x18\x02 \x01(\fR\x17AccountTokenCertificate\x12,\n" +
	"\x11DeviceCertificate\x18\x03 \x01(\fR\x11DeviceCertificate\x12&\n" +
	"\x0eRegulatoryInfo\x18\x04 \x01(\fR\x0eRegulatoryInfo\x12(\n" +
	"\x0fFairPlayKeyData\x18\x05 \x01(\fR\x0fFairPlayKeyData\x12\"\n" +
	"\fAccountToken\x18\x06 \x01(\fR\fAccountToken\x124\n" +
	"\x15AccountTokenSignature\x18\a \x01(\fR\x15AccountTokenSignature\x128\n" +
	"\x17UniqueDeviceCertificate\x18\b \x01(\fR\x17UniqueDeviceCertificate\"\x98\x01\n" +
	"\x18ActivationRecordResponse\x12\x1a\n" +
	"\bSubCAKey\x18\x01 \x01(\fR\bSubCAKey\x12&\n" +
	"\x0eAttestationKey\x18\x02 \x01(\fR\x0eAttestationKey\x12\x10\n" +
	"\x03UIK\x18\x03 \x01(\fR\x03UIK\x12\x0e\n" +
	"\x02RK\x18\x04 \x01(\fR\x02RK\x12\x16\n" +
	"\x06PSCSui\x18\x05 \x01(\fR\x06PSCSui\"E\n" +
	"\x1bADIStartProvisioningRequest\x12\x12\n" +
	"\x04DSID\x18\x01 \x01(\x03R\x04DSID\x12\x12\n" +
	"\x04SPIM\x18\x02 \x01(\fR\x04SPIM\"L\n" +
	"\x1cADIStartProvisioningResponse\x12\x18\n" +
	"\aSession\x18\x01 \x01(\x04R\aSession\x12\x12\n" +
	"\x04CPIM\x18\x02 \x01(\fR\x04CPIM\"\x93\x01\n" +
	"\x19ADIEndProvisioningRequest\x12\x18\n" +
	"\aSession\x18\x01 \x01(\x04R\aSession\x12\x12\n" +
	"\x04DSID\x18\x02 \x01(\x03R\x04DSID\x12\x14\n" +
	"\x05RINFO\x18\x03 \x01(\x03R\x05RINFO\x12\x10\n" +
	"\x03PTM\x18\x04 \x01(\fR\x03PTM\x12\x0e\n" +
	"\x02TK\x18\x05 \x01(\fR\x02TK\x12\x10\n" +
	"\x03ADI\x18\n" +
	" \x01(\fR\x03ADI\"R\n" +
	"\x1aADIEndProvisioningResponse\x12\x10\n" +
	"\x03MID\x18\x01 \x01(\fR\x03MID\x12\x10\n" +
	"\x03OTP\x18\x02 \x01(\fR\x03OTP\x12\x10\n" +
	"\x03ADI\x18\n" +
	" \x01(\fR\x03ADI\"C\n" +
	"\x1bADIGenerateLoginCodeRequest\x12\x12\n" +
	"\x04DSID\x18\x01 \x01(\x03R\x04DSID\x12\x10\n" +
	"\x03ADI\x18\x02 \x01(\fR\x03ADI\"P\n" +
	"\x1cADIGenerateLoginCodeResponse\x12\x12\n" +
	"\x04Code\x18\x01 \x01(\x05R\x04Code\x12\x1c\n" +
	"\tLoginCode\x18\x02 \x01(\rR\tLoginCode\"*\n" +
	"\x14AbsintheHelloRequest\x12\x12\n" +
	"\x04Mode\x18\x01 \x01(\x05R\x04Mode\";\n" +
	"\x15AbsintheHelloResponse\x12\"\n" +
	"\fHelloMessage\x18\x01 \x01(\fR\fHelloMessage\"\x80\x01\n" +
	"\x18AbsintheAddOptionRequest\x12\x16\n" +
	"\x06BIKKey\x18\x01 \x01(\fR\x06BIKKey\x12\x18\n" +
	"\aBAACert\x18\x02 \x01(\fR\aBAACert\x122\n" +
	"\x14IntermediateRootCert\x18\x03 \x01(\fR\x14IntermediateRootCert\"\x1b\n" +
	"\x19AbsintheAddOptionResponse\"e\n" +
	"\x1dAbsintheAtivateSessionRequest\x12&\n" +
	"\x0eValidationData\x18\x01 \x01(\fR\x0eValidationData\x12\x1c\n" +
	"\tServerKey\x18\x02 \x01(\fR\tServerKey\" \n" +
	"\x1eAbsintheAtivateSessionResponse\"5\n" +
	"\x17AbsintheSignDataRequest\x12\x1a\n" +
	"\bSignData\x18\x01 \x01(\fR\bSignData\"X\n" +
	"\x18AbsintheSignDataResponse\x12\x1c\n" +
	"\tSignature\x18\x01 \x01(\fR\tSignature\x12\x1e\n" +
	"\n" +
	"OutServKey\x18\x02 \x01(\fR\n" +
	"OutServKey\"-\n" +
	"\x17IndentitySessionRequest\x12\x12\n" +
	"\x04Cert\x18\x01 \x01(\fR\x04Cert\"4\n" +
	"\x18IndentitySessionResponse\x12\x18\n" +
	"\aRequest\x18\x01 \x01(\fR\aRequest\"T\n" +
	"\x1aIndentityValidationRequest\x12\x1a\n" +
	"\bResponse\x18\x01 \x01(\fR\bResponse\x12\x1a\n" +
	"\bSignData\x18\x02 \x01(\fR\bSignData\"C\n" +
	"\x1bIndentityValidationResponse\x12$\n" +
	"\rVlidationData\x18\x01 \x01(\fR\rVlidationData2\x82\f\n" +
	"\fCryptService\x12G\n" +
	"\n" +
	"Initialize\x12\x1a.icrypto.InitializeRequest\x1a\x1b.icrypto.InitializeResponse\"\x00\x12A\n" +
	"\bFinalize\x12\x18.icrypto.FinalizeRequest\x1a\x19.icrypto.FinalizeResponse\"\x00\x12k\n" +
	"\x16ActivationDRMHandshake\x12&.icrypto.ActivationDRMHandshakeRequest\x1a'.icrypto.ActivationDRMHandshakeResponse\"\x00\x12e\n" +
	"\x14ActivationDRMProcess\x12$.icrypto.ActivationDRMProcessRequest\x1a%.icrypto.ActivationDRMProcessResponse\"\x00\x12j\n" +
	"\x16ActivationDRMSignature\x12&.icrypto.ActivationDRMSignatureRequest\x1a&.icrypto.ActivationDRMSignatureRespone\"\x00\x12e\n" +
	"\x14ActivationDeprecated\x12$.icrypto.ActivationDeprecatedRequest\x1a%.icrypto.ActivationDeprecatedResponse\"\x00\x12Y\n" +
	"\x10ActivationRecord\x12 .icrypto.ActivationRecordRequest\x1a!.icrypto.ActivationRecordResponse\"\x00\x12e\n" +
	"\x14ADIStartProvisioning\x12$.icrypto.ADIStartProvisioningRequest\x1a%.icrypto.ADIStartProvisioningResponse\"\x00\x12_\n" +
	"\x12ADIEndProvisioning\x12\".icrypto.ADIEndProvisioningRequest\x1a#.icrypto.ADIEndProvisioningResponse\"\x00\x12e\n" +
	"\x14ADIGenerateLoginCode\x12$.icrypto.ADIGenerateLoginCodeRequest\x1a%.icrypto.ADIGenerateLoginCodeResponse\"\x00\x12P\n" +
	"\rAbsintheHello\x12\x1d.icrypto.AbsintheHelloRequest\x1a\x1e.icrypto.AbsintheHelloResponse\"\x00\x12\\\n" +
	"\x11AbsintheAddOption\x12!.icrypto.AbsintheAddOptionRequest\x1a\".icrypto.AbsintheAddOptionResponse\"\x00\x12k\n" +
	"\x16AbsintheAtivateSession\x12&.icrypto.AbsintheAtivateSessionRequest\x1a'.icrypto.AbsintheAtivateSessionResponse\"\x00\x12Y\n" +
	"\x10AbsintheSignData\x12 .icrypto.AbsintheSignDataRequest\x1a!.icrypto.AbsintheSignDataResponse\"\x00\x12Y\n" +
	"\x10IndentitySession\x12 .icrypto.IndentitySessionRequest\x1a!.icrypto.IndentitySessionResponse\"\x00\x12b\n" +
	"\x13IndentityValidation\x12#.icrypto.IndentityValidationRequest\x1a$.icrypto.IndentityValidationResponse\"\x00B\x1eZ\x1cgithub.com/zdypro888/icryptob\x06proto3"

var (
	file_crypto_proto_rawDescOnce sync.Once
	file_crypto_proto_rawDescData []byte
)

func file_crypto_proto_rawDescGZIP() []byte {
	file_crypto_proto_rawDescOnce.Do(func() {
		file_crypto_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_crypto_proto_rawDesc), len(file_crypto_proto_rawDesc)))
	})
	return file_crypto_proto_rawDescData
}

var file_crypto_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_crypto_proto_goTypes = []any{
	(*InitializeRequest)(nil),              // 0: icrypto.InitializeRequest
	(*InitializeResponse)(nil),             // 1: icrypto.InitializeResponse
	(*FinalizeRequest)(nil),                // 2: icrypto.FinalizeRequest
	(*FinalizeResponse)(nil),               // 3: icrypto.FinalizeResponse
	(*ActivationDRMHandshakeRequest)(nil),  // 4: icrypto.ActivationDRMHandshakeRequest
	(*ActivationDRMHandshakeResponse)(nil), // 5: icrypto.ActivationDRMHandshakeResponse
	(*ActivationDRMProcessRequest)(nil),    // 6: icrypto.ActivationDRMProcessRequest
	(*ActivationDRMProcessResponse)(nil),   // 7: icrypto.ActivationDRMProcessResponse
	(*ActivationDRMSignatureRequest)(nil),  // 8: icrypto.ActivationDRMSignatureRequest
	(*ActivationDRMSignatureRespone)(nil),  // 9: icrypto.ActivationDRMSignatureRespone
	(*ActivationDeprecatedRequest)(nil),    // 10: icrypto.ActivationDeprecatedRequest
	(*ActivationDeprecatedResponse)(nil),   // 11: icrypto.ActivationDeprecatedResponse
	(*ActivationRecordRequest)(nil),        // 12: icrypto.ActivationRecordRequest
	(*ActivationRecordResponse)(nil),       // 13: icrypto.ActivationRecordResponse
	(*ADIStartProvisioningRequest)(nil),    // 14: icrypto.ADIStartProvisioningRequest
	(*ADIStartProvisioningResponse)(nil),   // 15: icrypto.ADIStartProvisioningResponse
	(*ADIEndProvisioningRequest)(nil),      // 16: icrypto.ADIEndProvisioningRequest
	(*ADIEndProvisioningResponse)(nil),     // 17: icrypto.ADIEndProvisioningResponse
	(*ADIGenerateLoginCodeRequest)(nil),    // 18: icrypto.ADIGenerateLoginCodeRequest
	(*ADIGenerateLoginCodeResponse)(nil),   // 19: icrypto.ADIGenerateLoginCodeResponse
	(*AbsintheHelloRequest)(nil),           // 20: icrypto.AbsintheHelloRequest
	(*AbsintheHelloResponse)(nil),          // 21: icrypto.AbsintheHelloResponse
	(*AbsintheAddOptionRequest)(nil),       // 22: icrypto.AbsintheAddOptionRequest
	(*AbsintheAddOptionResponse)(nil),      // 23: icrypto.AbsintheAddOptionResponse
	(*AbsintheAtivateSessionRequest)(nil),  // 24: icrypto.AbsintheAtivateSessionRequest
	(*AbsintheAtivateSessionResponse)(nil), // 25: icrypto.AbsintheAtivateSessionResponse
	(*AbsintheSignDataRequest)(nil),        // 26: icrypto.AbsintheSignDataRequest
	(*AbsintheSignDataResponse)(nil),       // 27: icrypto.AbsintheSignDataResponse
	(*IndentitySessionRequest)(nil),        // 28: icrypto.IndentitySessionRequest
	(*IndentitySessionResponse)(nil),       // 29: icrypto.IndentitySessionResponse
	(*IndentityValidationRequest)(nil),     // 30: icrypto.IndentityValidationRequest
	(*IndentityValidationResponse)(nil),    // 31: icrypto.IndentityValidationResponse
}
var file_crypto_proto_depIdxs = []int32{
	0,  // 0: icrypto.CryptService.Initialize:input_type -> icrypto.InitializeRequest
	2,  // 1: icrypto.CryptService.Finalize:input_type -> icrypto.FinalizeRequest
	4,  // 2: icrypto.CryptService.ActivationDRMHandshake:input_type -> icrypto.ActivationDRMHandshakeRequest
	6,  // 3: icrypto.CryptService.ActivationDRMProcess:input_type -> icrypto.ActivationDRMProcessRequest
	8,  // 4: icrypto.CryptService.ActivationDRMSignature:input_type -> icrypto.ActivationDRMSignatureRequest
	10, // 5: icrypto.CryptService.ActivationDeprecated:input_type -> icrypto.ActivationDeprecatedRequest
	12, // 6: icrypto.CryptService.ActivationRecord:input_type -> icrypto.ActivationRecordRequest
	14, // 7: icrypto.CryptService.ADIStartProvisioning:input_type -> icrypto.ADIStartProvisioningRequest
	16, // 8: icrypto.CryptService.ADIEndProvisioning:input_type -> icrypto.ADIEndProvisioningRequest
	18, // 9: icrypto.CryptService.ADIGenerateLoginCode:input_type -> icrypto.ADIGenerateLoginCodeRequest
	20, // 10: icrypto.CryptService.AbsintheHello:input_type -> icrypto.AbsintheHelloRequest
	22, // 11: icrypto.CryptService.AbsintheAddOption:input_type -> icrypto.AbsintheAddOptionRequest
	24, // 12: icrypto.CryptService.AbsintheAtivateSession:input_type -> icrypto.AbsintheAtivateSessionRequest
	26, // 13: icrypto.CryptService.AbsintheSignData:input_type -> icrypto.AbsintheSignDataRequest
	28, // 14: icrypto.CryptService.IndentitySession:input_type -> icrypto.IndentitySessionRequest
	30, // 15: icrypto.CryptService.IndentityValidation:input_type -> icrypto.IndentityValidationRequest
	1,  // 16: icrypto.CryptService.Initialize:output_type -> icrypto.InitializeResponse
	3,  // 17: icrypto.CryptService.Finalize:output_type -> icrypto.FinalizeResponse
	5,  // 18: icrypto.CryptService.ActivationDRMHandshake:output_type -> icrypto.ActivationDRMHandshakeResponse
	7,  // 19: icrypto.CryptService.ActivationDRMProcess:output_type -> icrypto.ActivationDRMProcessResponse
	9,  // 20: icrypto.CryptService.ActivationDRMSignature:output_type -> icrypto.ActivationDRMSignatureRespone
	11, // 21: icrypto.CryptService.ActivationDeprecated:output_type -> icrypto.ActivationDeprecatedResponse
	13, // 22: icrypto.CryptService.ActivationRecord:output_type -> icrypto.ActivationRecordResponse
	15, // 23: icrypto.CryptService.ADIStartProvisioning:output_type -> icrypto.ADIStartProvisioningResponse
	17, // 24: icrypto.CryptService.ADIEndProvisioning:output_type -> icrypto.ADIEndProvisioningResponse
	19, // 25: icrypto.CryptService.ADIGenerateLoginCode:output_type -> icrypto.ADIGenerateLoginCodeResponse
	21, // 26: icrypto.CryptService.AbsintheHello:output_type -> icrypto.AbsintheHelloResponse
	23, // 27: icrypto.CryptService.AbsintheAddOption:output_type -> icrypto.AbsintheAddOptionResponse
	25, // 28: icrypto.CryptService.AbsintheAtivateSession:output_type -> icrypto.AbsintheAtivateSessionResponse
	27, // 29: icrypto.CryptService.AbsintheSignData:output_type -> icrypto.AbsintheSignDataResponse
	29, // 30: icrypto.CryptService.IndentitySession:output_type -> icrypto.IndentitySessionResponse
	31, // 31: icrypto.CryptService.IndentityValidation:output_type -> icrypto.IndentityValidationResponse
	16, // [16:32] is the sub-list for method output_type
	0,  // [0:16] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_crypto_proto_init() }
func file_crypto_proto_init() {
	if File_crypto_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_crypto_proto_rawDesc), len(file_crypto_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crypto_proto_goTypes,
		DependencyIndexes: file_crypto_proto_depIdxs,
		MessageInfos:      file_crypto_proto_msgTypes,
	}.Build()
	File_crypto_proto = out.File
	file_crypto_proto_goTypes = nil
	file_crypto_proto_depIdxs = nil
}
